<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Provider</title>
    <link rel="stylesheet" href="<%= basePath %>/styles/styles.css">
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link href="https://fonts.googleapis.com/css2?family=Urbanist:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="<%= basePath %>/css/introjs.min.css">
    <style>
        .edit-btn {
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 0.9rem;
        }

        .edit-btn {
            background-color: #f0ad4e;
            color: #fff;
            width: 100%;
        }

        .introjs-tooltipbuttons {
    text-align: right; /* Align buttons to the right */

}
body[dir="rtl"] {
      direction: rtl;
      text-align: right;
      font-family: "Arial", sans-serif;
    }

    body[dir="ltr"] {
      direction: ltr;
      text-align: left;
    }

    .language-selector {
      text-align: right;
    }

    .language-selector a {
      text-decoration: none;
      margin: 0 10px;
      color: #007BFF;
    }

    .language-selector a.active {
      font-weight: bold;
      text-decoration: underline;
    }
    .language-selector img {
      margin-right: 5px;
      width: 20px;
      height: auto;
      vertical-align: bottom;
    }
.help-btn {
    background-color: #007BFF;
    color: white;
    border: none;
    border-radius: 5px;
    padding: 10px 15px;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s ease;
}

.help-btn:hover {
    background-color: #0056b3; /* Slightly darker blue on hover */
}


.help-button-container {
    position: fixed;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: #12171e;
  padding: 12px 0;
  transition: all 0.5s ease;
}

/* Ensure the button aligns well with sidebar's active state */
.sidebar.active .help-btn {
    color: #fff;
    display: flex;
    width: 100%;
    gap: 5px;
    align-items: center;
    text-decoration: none;
    border-radius: 0.8rem;
}
    </style>
</head>
<body>
    <div class="sidebar">
        <div class="top">
            <div class="logo">
                <img src="<%= basePath %>/assets/logo.png" alt="WeHealthify">
            </div>
            <i class="bx bx-menu" id="btn"></i>
        </div>

        <div class="user">
            <div>
                <p class="bold" id="adminRole">Hospital Admin</p>
                <hr class="spacer">
            </div>
        </div>
        <ul>
            <li>
                <a href="<%= BASE_URL %>/hospitaladmin/admin-dashboard">
                    <i class="bx bxs-grid-alt"></i>
                    <span class="nav-item" id="dashboardLabel">Admin Dashboard</span>
                </a>
                <span class="tooltip" id="dashboardTooltip">Dashboard</span>
            </li>
            <li>
                <a href="<%= basePath %>/doctors">
                    <i class='bx bx-group'></i>
                    <span class="nav-item" id="manageProviders">Manage Providers</span>
                </a>
                <span class="tooltip" id="allProviders">All Providers </span>
            </li>
            <li>
                <a href="<%= BASE_URL %>/surveyapp/">
                    <i class='bx bx-book-content'></i>
                    <span class="nav-item" id="manageSurveys">Manage Surveys</span>
                </a>
                <span class="tooltip" id="allSurveys">All Surveys </span>
            </li>
            <li>
                <a href="<%= BASE_URL %>/surveyapp/add">
                    <i class='bx bx-folder-plus'></i>
                    <span class="nav-item" id="addSpecialty">Add New Specialty</span>
                </a>
                <span class="tooltip" id="newSpecialty">New Specialty</span>
            </li>
            <li>
                <a href="<%= BASE_URL %>/hospitaladmin/view-report">
                    <i class='bx bxs-report'></i>
                    <span class="nav-item" id="viewReports">View Reports</span>
                </a>
                <span class="tooltip" id="reports">Reports</span>
            </li>
            <li>
                <a href="<%= BASE_URL %>/hospitaladmin/">
                    <i class="bx bx-log-out"></i>
                    <span class="nav-item" id="logoutLabel">Logout</span>
                </a>
                <span class="tooltip" id="logoutTooltip">Logout</span>
            </li>
        </ul>
        <div class="help-button-container">
            <button id="helpButton" class="help-btn">
                <span class="nav-item" id="helpLabel">Help </span>
                <i class='bx bx-help-circle'></i>
            </button>
            
        
        </div>
    </div>

    <div class="main-content">
        <div class="topbar" dir="<%= lng === 'ar' ? 'rtl' : 'ltr' %>">
            <h2 id="welcomeAdmin" style="color: #333333;">Welcome, Hospital Admin</h2>
        </div>

        <hr style="opacity: 0.5;">
        <div class="language-selector" style="text-align: right; padding: 10px; background-color: #f5f6fa;">
            <a href="?lng=en" class="<%= lng === 'en' ? 'active' : '' %>">
                <img src="<%= basePath %>/assets/usa.png" alt="English Flag">English
            </a> |
            <a href="?lng=ar" class="<%= lng === 'ar' ? 'active' : '' %>">
                <img src="<%= basePath %>/assets/flag.png" alt="Arabic Flag">العربية
            </a>
          </div>
        <br><h2 id="editProviderHeader" style="color: #333333;">Edit Provider</h2><br>

        <!-- Form for editing a doctor -->
        <form action="<%= basePath %>/doctors/edit/<%= doctor._id %>" method="POST" class="addAdmin" style="text-align: left;" data-title="Edit Doctor" data-intro="This form is for editing the Doctor of your clinic." dir="<%= lng === 'ar' ? 'rtl' : 'ltr' %>">
            <input type="text" id="firstName" name="firstName" placeholder="First Name" value="<%= doctor.firstName %>" required>
            <input type="text" id="lastName" name="lastName" placeholder="Last Name" value="<%= doctor.lastName %>" required>
            
            <label for="speciality" id="specialityLabel">Speciality:</label>
            <select id="speciality" name="speciality" required data-title="Speciality" data-intro="Edit their speciality.">
                <% specialities.forEach(speciality => { %>
                    <option value="<%= speciality %>" <%= doctor.speciality === speciality ? 'selected' : '' %>><%= speciality %></option>
                <% }); %>
            </select>

            <!-- Checkbox for Reset Password -->
            <div style="display: flex; justify-content:space-evenly; margin-top: 10px; margin-bottom: -20px;" data-title="Reset Password / Lock Account" data-intro="Here you can reset password/lock their account.">
                <input style="margin-right:-15px;" type="checkbox" id="resetPassword" name="resetPassword" value="true">
                <label id="resetPasswordLabel" for="resetPassword">Reset Password</label>

                <!-- Checkbox for Account Locked -->
                <input style="margin-right:-15px;" type="checkbox" id="isLocked" name="isLocked" value="true" <%= doctor.isLocked ? 'checked' : '' %> >
                <label id="accountLockedLabel" for="isLocked">Account Locked</label>
            </div>
            
            <br> 
            <button id="saveChangesButton" type="submit" data-title="Save" data-intro="Save changes and proceed.">Save Changes</button>
            <a href="<%= basePath %>/doctors"><button id="cancelButton" type="button" class="edit-btn"><i class='bx bx-edit-alt'></i> Cancel</button></a>
        </form>
    </div>

    <!-- External scripts -->

    <script src="<%= basePath %>/js/intro.min.js"></script>
    <script>
        document.getElementById('helpButton').addEventListener('click', function () {
    // Determine the current language (default to English)
    const lang = new URLSearchParams(window.location.search).get('lng') || getCookie('lng') || 'en';

    // Define translations for the steps
    const translations = {
        en: {
            step1: "This form is for editing the Doctor of your clinic.",
            step2: "Here you can reset the password or lock their account.",
            step3: "Save changes and proceed."
        },
        ar: {
            step1: "هذا النموذج مخصص لتحرير طبيب عيادتك.",
            step2: "هنا يمكنك إعادة تعيين كلمة المرور أو قفل حسابهم.",
            step3: "احفظ التغييرات واستمر."
        }
    };

    // Define the steps for Intro.js
    const introSteps = [
        {
            element: 'form.addAdmin', // Form for editing doctors
            intro: translations[lang].step1
        },
        {
            element: 'div[data-title="Reset Password / Lock Account"]', // Reset password/lock account section
            intro: translations[lang].step2
        },
        {
            element: '#saveChangesButton', // Save changes button
            intro: translations[lang].step3
        }
        
    ];

    // Initialize and start Intro.js with dynamic labels for buttons
    introJs()
        .setOptions({
            steps: introSteps,
            rtl: lang === 'ar', // Enable RTL if the language is Arabic
            nextLabel: lang === 'ar' ? 'التالي' : 'Next',
            prevLabel: lang === 'ar' ? 'السابق' : 'Back',
            doneLabel: lang === 'ar' ? 'تم' : 'Done'
        })
        .start();
});

// Helper function to retrieve a cookie value by name
function getCookie(name) {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return parts.pop().split(';').shift();
    return null;
}

        
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const getCookie = (name) => {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return parts.pop().split(';').shift();
  };
  const params = new URLSearchParams(window.location.search);
  let currentLanguage = params.get('lng') || getCookie('lng') || 'en';

  // Set the language cookie
  document.cookie = `lng=${currentLanguage}; path=/`;
          const fetchUrl = `/manageproviders/doctors/locales/${currentLanguage}/translation.json`;

      
          // Set the `lang` and `dir` attributes for the HTML document
        //   document.documentElement.lang = currentLanguage;
        //   document.documentElement.dir = currentLanguage === 'ar' ? 'rtl' : 'ltr';
      
          fetch(fetchUrl)
            .then(response => {
              if (!response.ok) {
                console.warn(`Translation file not found for language: ${currentLanguage}. Falling back to English.`);
                return fetch(`/hospitaladmin/locales/en/translation.json`);
              }
              return response.json();
            })
            .then(translations => {
              console.log('Loaded translations:', translations);
      
              // Update the elements based on translation keys
              Object.keys(translations).forEach(id => {
                const element = document.getElementById(id);
      
                if (element) {
                    const translationValue = translations[id];

                    if (typeof translationValue === 'string') {
                        // Update regular text or HTML content
                        element.innerHTML = translationValue;
                    }
                      if (element.tagName === "INPUT" || element.tagName === "TEXTAREA") {

                        // Update placeholders for input elements

                        console.log(`Updating placeholder for ${id}:`, translationValue);

                        element.placeholder = translationValue;

                      }
                    else if (typeof translationValue === 'object') {
                                            // Handle nested object (e.g., lists)
                                            element.innerHTML = ''; // Clear existing content
                                            Object.values(translationValue).forEach(item => {
                                                const listItem = document.createElement('li');
                                                listItem.textContent = item;
                                                element.appendChild(listItem);
                                            });
                    } else {
                        console.warn(`Unexpected translation value type for "${id}":`, translationValue);
                    }
                }
              });
            })
            .catch(error => console.error('Error loading translations:', error));
        });
      </script>
    <script src="<%= basePath %>/script/script.js"></script>
    <script>
        let btn = document.querySelector('#btn');
        let sidebar = document.querySelector('.sidebar');

        btn.onclick = function() {
            sidebar.classList.toggle('active');
        };
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const firstNameField = document.getElementById('firstName');
            const lastNameField = document.getElementById('lastName');
            const usernameField = document.getElementById('username');
            const hospitalName = "<%= hospital_code %>";

            function generateUsername() {
                const firstName = firstNameField.value.trim().charAt(0).toLowerCase();
                const lastName = lastNameField.value.trim().toLowerCase();
                usernameField.value = `${hospitalName}_${firstName}_${lastName}`;
            }

            firstNameField.addEventListener('input', generateUsername);
            lastNameField.addEventListener('input', generateUsername);

            // Initialize the username on page load
            generateUsername();
        });
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const sidebarLinks = document.querySelectorAll('.sidebar ul li a');

            function removeCurrentPageClasses() {
                sidebarLinks.forEach(link => {
                    link.classList.remove('CurrentPage');
                });
            }

            function setCurrentPageLink(path) {
                removeCurrentPageClasses();
                console.log(`Setting CurrentPage link for path: ${path}`);
                const currentPageLink = Array.from(sidebarLinks).find(link => {
                    const linkPath = new URL(link.href).pathname;
                    return linkPath === path;
                });
                if (currentPageLink) {
                    console.log(`CurrentPage link found: ${currentPageLink.href}`);
                    currentPageLink.classList.add('CurrentPage');
                } else {
                    console.log(`No CurrentPage link found for path: ${path}`);
                }
            }

            // Check the URL path and set the current page link on page load
            const currentPath = window.location.pathname;
            console.log(`Current path: ${currentPath}`);
            setCurrentPageLink(currentPath);

            sidebarLinks.forEach(link => {
                link.addEventListener('click', function() {
                    const targetPath = new URL(link.href).pathname;
                    console.log(`Navigating to: ${targetPath}`);
                    setCurrentPageLink(targetPath);
                });
            });
        });
    </script>
</body>
</html>
